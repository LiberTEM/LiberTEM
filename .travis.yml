language: python
cache:
  - pip
  - directories:
    - client/node_modules/

install:
  - pip install tox

script:
  - tox

after_success:
  - bash <(curl -s https://codecov.io/bash) -f coverage.xml -f client/coverage/coverage-final.json

jobs:
  include:
    - stage: test
      env: TOXENV=py36
      python: 3.6
    - stage: test
      env: TOXENV=py37
      python: 3.7
      dist: xenial
      sudo: true
    - stage: test
      env: TOXENV=numba_coverage
      python: 3.7
      dist: xenial
      sudo: true
    - stage: test
      env: TOXENV=mypy
      python: 3.7
      dist: xenial
      sudo: true
    - stage: test
      env: TOXENV=flake8
      python: 3.7
      dist: xenial
      sudo: true
    - stage: test
      env: TOXENV=qa
      dist: xenial
      python: 3.7
      sudo: true
    - stage: test
      env: TOXENV=docs-check
      python: 3.7
      dist: xenial
      sudo: true
      install:
        - pip install tox
        - sudo apt-get install -y pandoc
    - stage: test
      env: DASK_SCHEDULER_ADDRESS=tcp://localhost:8786
      python: 3.7
      dist: xenial
      services:
        - docker
      install:
        - pip install tox pip-tools
        - (cd packaging/docker/ && ./update_reqs.sh)
      script:
        - (cd packaging/docker/ && docker-compose up --build -d)
        - tox -e py37 -- tests/ -m dist
    - stage: test
      language: node_js
      node_js:
        - 8
      install:
        - (cd client && npm install)
      script:
        - (cd client && npm run build)
        - (cd client && npm test -- --coverage)
        - (cd client && npm run lint)

    - stage: packaging
      env: TOXENV=docs-deploy
      python: 3.7
      dist: xenial
      sudo: true
      install:
        - pip install tox
        - sudo apt-get install -y pandoc

    - stage: packaging
      sudo: require
      python: 3.7
      dist: xenial
      install:
        - pip install -r scripts/requirements.txt
      script:
        - python scripts/release upload --pypi-test-user=libertem_bot --pypi-user=libertem_bot --no-dry-run
  
  allow_failures:
    - env: TOXENV=mypy    
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/
    - /^v[0-9]+\.[0-9]+\.[0-9]+/
