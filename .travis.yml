language: python
os: linux
dist: xenial
cache:
  - pip
  - directories:
    - client/node_modules/
    - $HOME/.pyenv/versions/

install:
  - pip install -U tox 'virtualenv>19'

script:
  - tox

after_success:
  - bash <(curl -s https://codecov.io/bash) -f coverage.xml -f client/coverage/coverage-final.json

jobs:
  include:
    # Linux tests:
    - stage: test
      env: TOXENV=py36
      python: 3.6
    - stage: test
      env: TOXENV=py37
      python: 3.7

    # OSX tests:
    - stage: test
      os: osx
      env: TOXENV=py36
      before_install:
        - ulimit -n
        - ulimit -n 4096
        - eval "$(pyenv init -)"
        - pyenv install -l
        - pyenv install --skip-existing 3.6.9
        - pyenv global 3.6.9
        - pyenv rehash
        - python --version
        - python3 --version
        - pip3 --version
        - pip --version
      language: shell
    - stage: test
      os: osx
      env: TOXENV=py37
      before_install:
        - ulimit -n
        - ulimit -n 4096
        - eval "$(pyenv init -)"
        - pyenv install -l
        - pyenv install --skip-existing 3.7.5
        - pyenv global 3.7.5
        - pyenv rehash
        - python --version
        - python3 --version
        - pip3 --version
        - pip --version
      language: shell

    - stage: test
      env: TOXENV=numba_coverage
      python: 3.7
    - stage: test
      env: TOXENV=mypy
      python: 3.7
    - stage: test
      env: TOXENV=flake8
      python: 3.7
    - stage: test
      env: TOXENV=qa
      python: 3.7
    - stage: test
      env: TOXENV=docs-check
      python: 3.7
      install:
        - pip install -U tox 'virtualenv>19'
        - sudo apt-get install -y pandoc
    - stage: test
      env: DASK_SCHEDULER_ADDRESS=tcp://localhost:8786
      python: 3.7
      services:
        - docker
      install:
        - pip install -U tox 'virtualenv>19' pip-tools
        - (cd packaging/docker/ && ./update_reqs.sh)
      script:
        - (cd packaging/docker/ && docker-compose build)
        - (cd packaging/docker/ && docker-compose run tests)
    - stage: test
      language: node_js
      node_js: 8
      install:
        - (cd client && npm install)
      script:
        - (cd client && npm run build)
        - (cd client && npm test -- --coverage)
        - (cd client && npm run lint)

    - stage: packaging
      env: TOXENV=docs-deploy
      python: 3.7
      install:
        - pip install -U tox 'virtualenv>19'
        - sudo apt-get install -y pandoc

    - stage: packaging
      python: 3.7
      install:
        - pip install -r scripts/requirements.txt
      script:
        - python scripts/release upload --pypi-test-user=libertem_bot --pypi-user=libertem_bot --no-dry-run
  
  allow_failures:
    - env: TOXENV=mypy    
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/
    - /^v[0-9]+\.[0-9]+\.[0-9]+/
