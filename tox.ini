[tox]
envlist = flake8, py{36,37}, mypy

[testenv]
commands=
    pytest --durations=5 --cov=libertem --cov-report=term --cov-report=html --cov-report=xml {posargs:tests/}
    # win_tweaks.py depends on modules that are only available on Windows
    pytest --doctest-modules --ignore=src/libertem/win_tweaks.py src/libertem/
deps=
    -rtest_requirements.txt
    # Inject release candidates for testing
    -roverride_requirements.txt
extras=
    hdbscan
setenv=
    # Using pytest in combination with tox on files that are part of the installed package
    # leads to collisions between the local source tree and the installed package when running tests.
    # See https://github.com/pytest-dev/pytest/issues/2042
    PY_IGNORE_IMPORTMISMATCH=1
passenv=
    DASK_SCHEDULER_ADDRESS

[testenv:numba_coverage]
commands=
    pytest --durations=5 --cov=libertem --cov-report=term --cov-report=html --cov-report=xml -m with_numba {posargs:tests/}
setenv=
    NUMBA_DISABLE_JIT=1

[testenv:flake8]
changedir={toxinidir}
deps=
    flake8
commands=
    flake8 --config=setup.cfg src/
skipsdist=True
skip_install=True

[testenv:mypy]
changedir={toxinidir}
deps =
  mypy
commands =
  mypy src/libertem
skip_install=True

# general QA stuff here, we don't want to fail the flake8 build for unrelated reasons
[testenv:qa]
changedir={toxinidir}
deps=
    pyroma
    pygments
    twine
commands=
    python setup.py sdist
    python setup.py bdist_wheel
    twine check dist/*
    pyroma -n 10 {toxinidir}
skipsdist=True
skip_install=True

[testenv:build_client]
changedir={toxinidir}
skipsdist=True
skip_install=True
passenv=APPDATA
deps=
commands=
    python setup.py build_client copy_client

[testenv:docs]
changedir={toxinidir}
basepython=python3.7
whitelist_externals=
    make
setenv=
    PYTHONPATH={toxinidir}
commands=
    python "{toxinidir}/scripts/build-authors-contributors"
    sphinx-autobuild -b html "{toxinidir}/docs/source" "{toxinidir}/docs/build/html" -p 8008 {posargs}
deps=
    sphinx>1.4
    sphinx-autobuild
    sphinxcontrib-bibtex
    sphinx-issues
    nbsphinx
    nbsphinx_link
    ipython
    # Inject release candidates for doctest testing
    -roverride_requirements.txt
skipsdist=True

[testenv:docs-deploy]
changedir={toxinidir}
basepython=python3.7
setenv=
    PYTHONPATH={toxinidir}
commands=
    python "{toxinidir}/scripts/build-authors-contributors"
    travis-sphinx build
    travis-sphinx deploy
deps=
    sphinx
    travis-sphinx
    sphinxcontrib-bibtex
    sphinx-issues
    nbsphinx
    nbsphinx_link
    ipython
    # Inject release candidates for doctest testing
    -roverride_requirements.txt
skipsdist=True
passenv=
    HOME
    GH_*
    TRAVIS_*

[testenv:docs-check]
changedir={toxinidir}
basepython=python3.7
setenv=
    PYTHONPATH={toxinidir}
commands=
    python "{toxinidir}/scripts/build-authors-contributors"
    sphinx-build -W -b html "{toxinidir}/docs/source" "{toxinidir}/docs/build/html"
    sphinx-build -b doctest "{toxinidir}/docs/source" "{toxinidir}/docs/build/html"
    # sphinx-build -b linkcheck "{toxinidir}/docs/source" "{toxinidir}/docs/build/html"
    # cat docs/build/html/output.txt
deps=
    sphinx
    sphinxcontrib-bibtex
    sphinx-issues
    nbsphinx
    nbsphinx_link
    ipython
    # Inject release candidates for doctest testing
    -roverride_requirements.txt
skipsdist=True
whitelist_externals=
    cat
passenv=
    HOME